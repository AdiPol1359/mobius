generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  email        String         @unique
  password     String         @unique
  firstName    String         @map("first_name")
  lastName     String         @map("last_name")
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime       @updatedAt @map("updated_at")
  teamMember   TeamMember[]
  notification Notification[]
  TeamMessage  TeamMessage[]

  @@map("user")
}

model Team {
  id          String        @id @default(uuid())
  name        String
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @updatedAt @map("updated_at")
  teamMember  TeamMember[]
  teamCode    TeamCode[]
  teamMessage TeamMessage[]

  @@map("team")
}

model TeamMember {
  user   User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int              @map("user_id")
  team   Team             @relation(fields: [teamId], references: [id], onDelete: Cascade)
  teamId String           @map("team_id")
  roles  TeamMemberRole[]

  @@id([userId, teamId])
  @@map("team_member")
}

model TeamCode {
  id     Int    @id @default(autoincrement())
  teamId String @map("team_id")
  code   String @unique
  team   Team   @relation(fields: [teamId], references: [id], onDelete: Cascade)

  @@map("team_code")
}

model Notification {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @map("user_id")
  content   String
  createdAt DateTime @default(now()) @map("created_at")

  @@map("notification")
}

model TeamMessage {
  id        Int      @id @default(autoincrement())
  teamId    String   @map("team_id")
  userId    Int      @map("user_id")
  content   String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  team      Team     @relation(fields: [teamId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@map("team_message")
}

enum TeamMemberRole {
  OWNER
  MEMBER

  @@map("team_member_role")
}
