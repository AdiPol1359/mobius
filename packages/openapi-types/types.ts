/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	'/users': {
		post: operations['UsersController_createUser'];
	};
	'/sessions/me': {
		get: operations['SessionsController_getMeSession'];
		delete: operations['SessionsController_deleteSession'];
	};
	'/sessions': {
		post: operations['SessionsController_createSession'];
	};
	'/teams': {
		get: operations['TeamsController_getAllTeams'];
		post: operations['TeamsController_createTeam'];
	};
	'/teams/{teamId}': {
		get: operations['TeamsController_getTeamById'];
		delete: operations['TeamsController_deleteTeam'];
	};
	'/teams/join': {
		post: operations['TeamsController_joinTeam'];
	};
	'/teams/{teamId}/leave': {
		post: operations['TeamsController_leaveTeam'];
	};
	'/teams/{teamId}/messages': {
		get: operations['TeamsController_getAllTeamMessages'];
		post: operations['TeamsController_createTeamMessage'];
	};
	'/notifications': {
		get: operations['NotificationsController_getAllNotifications'];
	};
}

export type webhooks = Record<string, never>;

export interface components {
	schemas: {
		CreateUserDto: {
			/** @example example@example.com */
			email: string;
			/** @example Pass123! */
			password: string;
			/** @example John */
			firstName: string;
			/** @example Burton */
			lastName: string;
		};
		UserDto: {
			/** @example 1 */
			id: number;
			/** @example example@example.com */
			email: string;
			/** @example John */
			firstName: string;
			/** @example Burton */
			lastName: string;
		};
		OpenAPIHttpException: {
			statusCode: number;
			message: string;
			error?: string;
		};
		CreateSessionDto: {
			/** @example example@example.com */
			email: string;
			/** @example Pass123! */
			password: string;
		};
		TeamDto: {
			roles?: ('OWNER' | 'MEMBER')[];
			/** @example be756869-0cbe-4be9-8e28-4abbde7bc3fa */
			id: string;
			/** @example FooTeam */
			name: string;
		};
		CreateTeamDto: {
			/** @example FooTeam */
			name: string;
		};
		DeleteTeamDto: {
			/** @example FooTeam */
			name: string;
		};
		JoinTeamDto: {
			/** @example ABCD1234 */
			code: string;
		};
		AuthorDto: {
			/** @example 10 */
			id: number;
			/** @example John */
			firstName: string;
			/** @example Burton */
			lastName: string;
		};
		MessageDto: {
			/** @example 10 */
			id: number;
			/** @example Hello! */
			content: string;
			/** @example 2023-06-04T12:00:00 */
			createdAt: string;
			/** @example 2023-06-05T15:00:00 */
			updatedAt: string;
			author: components['schemas']['AuthorDto'];
		};
		CreateMessageDto: {
			/** @example Hello! */
			content: string;
		};
		NotificationDto: {
			/** @example 1 */
			id: number;
			/** @example Foo */
			content: string;
			/** Format: date-time */
			createdAt: string;
		};
	};
	responses: never;
	parameters: never;
	requestBodies: never;
	headers: never;
	pathItems: never;
}

export type external = Record<string, never>;

export interface operations {
	UsersController_createUser: {
		requestBody: {
			content: {
				'application/json': components['schemas']['CreateUserDto'];
			};
		};
		responses: {
			201: {
				content: {
					'application/json': components['schemas']['UserDto'];
				};
			};
			/** @description User already exists. */
			409: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
		};
	};
	SessionsController_getMeSession: {
		responses: {
			200: {
				content: {
					'application/json': components['schemas']['UserDto'];
				};
			};
			/** @description Incorrect authentication credentials. */
			401: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
		};
	};
	SessionsController_deleteSession: {
		responses: {
			204: never;
			/** @description Incorrect authentication credentials. */
			401: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
		};
	};
	SessionsController_createSession: {
		requestBody: {
			content: {
				'application/json': components['schemas']['CreateSessionDto'];
			};
		};
		responses: {
			201: {
				content: {
					'application/json': components['schemas']['UserDto'];
				};
			};
			/** @description Incorrect email or password. */
			401: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
			/** @description User not found. */
			404: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
		};
	};
	TeamsController_getAllTeams: {
		responses: {
			200: {
				content: {
					'application/json': components['schemas']['TeamDto'][];
				};
			};
			/** @description Incorrect authentication credentials. */
			401: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
		};
	};
	TeamsController_createTeam: {
		requestBody: {
			content: {
				'application/json': components['schemas']['CreateTeamDto'];
			};
		};
		responses: {
			201: {
				content: {
					'application/json': components['schemas']['TeamDto'];
				};
			};
			/** @description Incorrect authentication credentials. */
			401: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
		};
	};
	TeamsController_getTeamById: {
		parameters: {
			path: {
				teamId: string;
			};
		};
		responses: {
			200: {
				content: {
					'application/json': components['schemas']['TeamDto'];
				};
			};
			/** @description Incorrect authentication credentials. */
			401: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
			/** @description Missing role in the team. */
			403: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
			/** @description Team member not found. */
			404: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
		};
	};
	TeamsController_deleteTeam: {
		parameters: {
			path: {
				teamId: string;
			};
		};
		requestBody: {
			content: {
				'application/json': components['schemas']['DeleteTeamDto'];
			};
		};
		responses: {
			200: {
				content: {
					'application/json': components['schemas']['TeamDto'];
				};
			};
			/** @description Incorrect authentication credentials. */
			401: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
			/** @description Missing role in the team. */
			403: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
			/** @description Team member not found. */
			404: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
		};
	};
	TeamsController_joinTeam: {
		requestBody: {
			content: {
				'application/json': components['schemas']['JoinTeamDto'];
			};
		};
		responses: {
			201: {
				content: {
					'application/json': components['schemas']['TeamDto'];
				};
			};
			/** @description Incorrect authentication credentials. */
			401: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
			/** @description Team code not found. */
			404: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
			/** @description You are already in this team. */
			409: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
		};
	};
	TeamsController_leaveTeam: {
		parameters: {
			path: {
				teamId: string;
			};
		};
		responses: {
			201: {
				content: {
					'application/json': components['schemas']['TeamDto'];
				};
			};
			/** @description Incorrect authentication credentials. */
			401: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
			/** @description Missing role in the team. */
			403: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
			/** @description Team member not found. */
			404: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
		};
	};
	TeamsController_getAllTeamMessages: {
		parameters: {
			query: {
				offset?: number;
				limit?: number;
			};
			path: {
				teamId: string;
			};
		};
		responses: {
			200: {
				content: {
					'application/json': components['schemas']['MessageDto'][];
				};
			};
			/** @description Incorrect authentication credentials. */
			401: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
			/** @description Missing role in the team. */
			403: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
			/** @description Team member not found. */
			404: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
		};
	};
	TeamsController_createTeamMessage: {
		parameters: {
			path: {
				teamId: string;
			};
		};
		requestBody: {
			content: {
				'application/json': components['schemas']['CreateMessageDto'];
			};
		};
		responses: {
			201: {
				content: {
					'application/json': components['schemas']['MessageDto'];
				};
			};
			/** @description Incorrect authentication credentials. */
			401: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
			/** @description Missing role in the team. */
			403: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
			/** @description Team member not found. */
			404: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
		};
	};
	NotificationsController_getAllNotifications: {
		parameters: {
			query: {
				offset?: number;
				limit?: number;
			};
		};
		responses: {
			200: {
				content: {
					'application/json': components['schemas']['NotificationDto'][];
				};
			};
			/** @description Incorrect authentication credentials. */
			401: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
		};
	};
}
